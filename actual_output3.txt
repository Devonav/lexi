Source Program:
const max = 99999, min = 1, avg = 100000;
/* Proper comment */
var longIdentifierName, a, b;
/* This is another comment */
procedure example;
begin
    longIdentifierName := max + min / (a - b * avg);
    call example;
    if a <> b then
        a := a + 12345
    else
        a := b - 54321;
    while a >= 0 do
        a := a + 1;
    read 1234 abcdefghijkl;
    write 123456;
end.
/* unterminated comment
: =
><<<>
x8x8x8
identifierWithTooManyCharacters := 10;

Lexeme Table:

lexeme	token type
const	28
max	2
=	9
99999	3
,	17
min	2
=	9
1	3
,	17
avg	2
=	9
10000	34	Error: number too long
;	18
var	29
longIdentif	34	Error: name too long
,	17
a	2
,	17
b	2
;	18
procedure	30
example	2
;	18
begin	21
longIdentif	34	Error: name too long
:=	20
max	2
+	4
min	2
/	7
(	15
a	2
-	5
b	2
*	6
avg	2
)	16
;	18
call	27
example	2
;	18
if	23
a	2
<>	10
b	2
then	24
a	2
:=	20
a	2
+	4
12345	3
else	33
a	2
:=	20
b	2
-	5
54321	3
;	18
while	25
a	2
>=	14
0	3
do	26
a	2
:=	20
a	2
+	4
1	3
;	18
read	32
1234	3
abcdefghijk	34	Error: name too long
;	18
write	31
12345	34	Error: number too long
;	18
end	22
.	19
/*	34	Error: unterminated comment
Token List:
28 2 max 9 3 99999 17 2 min 9 3 1 17 2 avg 9 34 18 29 34 17 2 a 17 2 b 18 30 2 example 18 21 34 20 2 max 4 2 min 7 15 2 a 5 2 b 6 2 avg 16 18 27 2 example 18 23 2 a 10 2 b 24 2 a 20 2 a 4 3 12345 33 2 a 20 2 b 5 3 54321 18 25 2 a 14 3 0 26 2 a 20 2 a 4 3 1 18 32 3 1234 34 18 31 34 18 22 19 34
